										Benchmark Performances Of Safe Prune Function 

(Tests for n_samples = 500, n_features = 40, n_bins = 3, epsilon = 1e-14)
(n_binned_features = (40 * 5)**3/2)
(n_input = (40 * 5)**3/2 * 500)

- Test n°1: Nested for loops vs safe_prune function with numba (max_depth = 2)
	    delay safe prune =  5.958107233047485
	    delay safe pruning test =  0.10118937492370605
	    The intersection list and the list of keys have the same length
	    length intersect_key =  7140
	    length safe set key :  7140
	    length safe set key test =  7140
	    

- Test n°2: Nested for loops vs safe_prune function with numba (max_depth = 3)
	    delay safe prune =  10.713122606277466
	    delay safe pruning test =  4.507339000701904
	    The intersection list and the list of keys have the same length
            length intersect_key =  273896
	    length safe set key :  273896
	    length safe set key test =  280916



**** Notes ****
Faire matrice d'interactions à la main avec des for loops et storer les features d'interactions en dense dans une matrice (petits problèmes) pour tester SPP
Lancer d'une part SPP et d'autre part un Lasso sur la matrice d'interactions
Faire un sort sur les keys pour ordonner les indexes afin que l'intersection prenne en compte tous les éléments sans tenir compte de l'ordre
